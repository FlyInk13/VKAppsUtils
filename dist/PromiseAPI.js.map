{"version":3,"sources":["../src/PromiseAPI.js"],"names":["PromiseAPI","data","method","params","Promise","resolve","reject","request_id","Math","random","toString","access_token","v","requests","cartCheck","error","apiError","error_reason","error_data","errorCode","error_code","cartInit","callMethod","showCaptcha","response","execute_errors","reject_execute_errors","view","cart","log","pause","subscribe","bridge","detail","type","parseError","parseResponse","request","send","console","ignoreCart","interval","sendRequest","debug","push","length","clearInterval","shift","setInterval","cartTick","oldPopout","state","popout","setState","title","autoclose","captchaCode","captcha_img","width","borderRadius","e","currentTarget","value","then","captcha_key","captcha_sid","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Alert from '@vkontakte/vkui/dist/components/Alert/Alert';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport bridge from \"@vkontakte/vk-bridge\";\n\nclass PromiseAPI {\n  constructor(data) {\n    // user data\n    this.access_token = (data ? data.access_token : false) || false;\n    this.view = (data ? data.view : false) || false;\n    this.v = (data ? data.v : false) || '5.92';\n    this.reject_execute_errors = !!data.reject_execute_errors;\n\n    // requests map { request_id: request_data };\n    this.requests = {};\n    // requests cart [request_id, request_id, ...];\n    this.cart = [];\n\n    // internal vars\n    this.log = false;\n    this.pause = false;\n\n    // bridge transport\n    this.subscribe();\n  }\n\n  subscribe() {\n    this.bridge = bridge;\n    this.bridge.subscribe(({ detail: { type, data }}) => {\n      switch (type) {\n        case 'VKWebAppCallAPIMethodFailed':\n          this.parseError(data);\n          break;\n        case 'VKWebAppCallAPIMethodResult':\n          this.parseResponse(data);\n          break;\n      }\n    });\n  }\n\n  sendRequest(request) {\n    this.bridge.send('VKWebAppCallAPIMethod', request.data);\n  }\n\n  debug(...args) {\n    if (!this.log) return;\n    console.log(...args);\n  }\n\n  cartCheck(request_id, ignoreCart) {\n    if (!this.pause && (!this.interval || ignoreCart)) {\n      const request = this.requests[request_id];\n      this.sendRequest(request);\n      this.debug('cartCheck', 'call', request);\n      return;\n    }\n    this.debug('cartCheck', 'push');\n    this.cart.push(request_id);\n  }\n\n  cartTick() {\n    this.debug('cartTick', this.cart.length);\n    if (!this.cart.length) {\n      clearInterval(this.interval);\n      delete this.interval;\n      return;\n    }\n    const request_id = this.cart.shift();\n    this.cartCheck(request_id, true);\n  }\n\n  cartInit() {\n    this.debug('cartInit');\n    if (this.interval) return;\n    this.interval = setInterval(() => this.cartTick(), 334);\n  }\n\n  showCaptcha(method, params, error) {\n    if (!this.view) {\n      throw error;\n    }\n\n    this.pause = 1;\n    return new Promise((resolve) => {\n      const view = this.view;\n      const oldPopout = view.state.popout;\n      view.setState({\n        popout: (\n          <Alert\n            actionsLayout=\"vertical\"\n            actions={[\n              {\n                title: 'OK',\n                autoclose: true,\n              }\n            ]}\n            onClose={() => {\n              resolve(view.state.captchaCode);\n              view.setState({ popout: oldPopout, captchaCode: null });\n            }}\n          >\n            <h2>Введите код с картинки</h2>\n            <img src={error.captcha_img} style={{ width: 238, borderRadius: 3 }} alt={error.captcha_img}/>\n            <Input defaultValue='' onChange={(e) => {\n              const captchaCode = e.currentTarget.value;\n              view.setState({ captchaCode });\n            }}/>\n          </Alert>\n        )\n      });\n    }).then((captcha_key) => {\n      this.pause = 0;\n      const captcha_sid = error.captcha_sid;\n      return this.callMethod(method, {\n        ...params,\n        captcha_key,\n        captcha_sid,\n      });\n    });\n  }\n\n  getMethod(method) {\n    return this.callMethod.bind(this, method);\n  }\n\n  callMethod = (method, params = {}) => {\n    return new Promise((resolve, reject) => {\n      const request_id = (Math.random() * 1e20).toString(32);\n      const data = {\n        method,\n        params: {\n          access_token: this.access_token,\n          v: this.v,\n          ...params,\n        },\n        request_id,\n      };\n\n      this.requests[request_id] = { resolve, reject, data };\n      this.cartCheck(request_id);\n    }).catch((error) => {\n      error = error || {};\n      const apiError = (typeof error.error_reason == 'object' ? error.error_reason : error.error_data) || error;\n      const errorCode = apiError.error_code || 0;\n\n      switch (errorCode) {\n        case 6:\n          this.cartInit();\n          return this.callMethod(method, params);\n        case 14:\n          return this.showCaptcha(method, params, apiError);\n      }\n\n      throw apiError;\n    });\n  };\n\n  parseError = (data) => {\n    const { error_data, request_id } = data;\n    if (!this.requests[request_id]) return;\n    this.requests[request_id].reject(error_data);\n    delete this.requests[request_id];\n  };\n\n  parseResponse = (data) => {\n    const { response, execute_errors, request_id } = data;\n    if (!this.requests[request_id]) return;\n\n    if (execute_errors && this.reject_execute_errors) {\n      const error = execute_errors[0];\n      error.data = data;\n      this.requests[request_id].reject(error);\n    } else {\n      this.requests[request_id].resolve(response);\n    }\n\n    delete this.requests[request_id];\n  };\n}\n\nexport default PromiseAPI;\n"],"file":"PromiseAPI.js"}